name: 开发环境工作流
on:
  push:
    branches:
      - develop
env:
  # 仓库名称
  PROJECT_NAME: ${{ github.event.repository.name }}
  # dev 或 prod
  STAGE: dev
  # k3s 集群中使用命名空间
  K3S_NAMESPACE: ${{ secrets.K3S_NAMESPACE }}
  # k3s 集群域名
  K3S_DOMAIN: ${{ secrets.K3S_DOMAIN }}
  # 阿里云镜像地址，不带标签
  ALI_IMAGE: ${{ secrets.ALI_DOCKER_REGISTRY }}/${{ secrets.ALI_DOCKER_NAMESPACE }}/${{ github.event.repository.name }}
  # 镜像地址列表，在需要上传多个镜像仓库的时候使用
  IMAGE_WITH_SHA: |
    ${{ secrets.ALI_DOCKER_REGISTRY }}/${{ secrets.ALI_DOCKER_NAMESPACE }}/${{ github.event.repository.name }}:${{ github.sha }}
jobs:
  build:
    name: 构建并推送镜像
    runs-on: ubuntu-latest
    steps:
      # 拉取代码
      - name: 拉取代码
        uses: actions/checkout@v2
      # 设置 QEMU
      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v1
      # 设置 buildX
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v1
      # 登录 docker 镜像仓库
      - name: 登录 Github Docker 镜像仓库
        uses: docker/login-action@v1
        if: ${{ contains(env.IMAGE_WITH_SHA, 'ghcr.io') }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: 登录阿里云 Docker 镜像仓库
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ALI_DOCKER_REGISTRY }}
          username: ${{ secrets.ALI_DOCKER_USERNAME }}
          password: ${{ secrets.ALI_DOCKER_PASSWORD }}
      # 构建并推送镜像
      - name: 构建并推送镜像
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./_ci/Dockerfile
          push: true
          tags: ${{ env.IMAGE_WITH_SHA }}
      - name: 镜像摘要
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    name: 部署到集群（开发环境）
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v1
      - name: 准备 Helm Chart 文件
        run: |
          mv ./_ci/chart ./_ci/${{ env.PROJECT_NAME }}
          sed -i "s/{{ name }}/${{ env.PROJECT_NAME }}/g" ./_ci/${{ env.PROJECT_NAME }}/Chart.yaml
          sed -i "s/{{ appVersion }}/${{ github.sha }}/g" ./_ci/${{ env.PROJECT_NAME }}/Chart.yaml
      - name: 检查 Helm Chart 文件
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm lint ./_ci/${{ env.PROJECT_NAME }}
      - name: 执行部署命令
        uses: WyriHaximus/github-action-helm3@v2
        with:
          kubeconfig: '${{ secrets.KUBE_CONFIG }}'
          exec: helm upgrade $PROJECT_NAME ./_ci/$PROJECT_NAME --install --wait --namespace=$K3S_NAMESPACE-$STAGE --set image.repository=$ALI_IMAGE --set imagePullSecrets[0].name=aliyun-hk --set ingress.enabled=true --set ingress.hosts[0].host=$PROJECT_NAME.$STAGE.$K3S_DOMAIN --set ingress.hosts[0].paths[0]='/' --timeout=120s
